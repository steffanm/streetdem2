{"ast":null,"code":"/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign } from \"tslib\";\nimport * as React from \"react\";\nimport { Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport { Button } from \"../button/buttons\";\nimport { Text } from \"../text/text\"; // eslint-disable-next-line @typescript-eslint/ban-types\n\nexport var PanelView2 = function (props) {\n  var handleClose = React.useCallback(function () {\n    return props.onClose(props.panel);\n  }, [props.onClose, props.panel]);\n  var maybeBackButton = props.previousPanel === undefined ? null : React.createElement(Button, {\n    \"aria-label\": \"Back\",\n    className: Classes.PANEL_STACK_HEADER_BACK,\n    icon: \"chevron-left\",\n    minimal: true,\n    onClick: handleClose,\n    small: true,\n    text: props.previousPanel.title,\n    title: props.previousPanel.htmlTitle\n  }); // `props.panel.renderPanel` is simply a function that returns a JSX.Element. It may be an FC which\n  // uses hooks. In order to avoid React errors due to inconsistent hook calls, we must encapsulate\n  // those hooks with their own lifecycle through a very simple wrapper component.\n\n  var PanelWrapper = React.useMemo(function () {\n    return function () {\n      // N.B. A type cast is required because of error TS2345, where technically `panel.props` could be\n      // instantiated with a type unrelated to our generic constraint `T` here. We know\n      // we're sending the right values here though, and it makes the consumer API for this\n      // component type safe, so it's ok to do this...\n      return props.panel.renderPanel(__assign({\n        closePanel: handleClose,\n        openPanel: props.onOpen\n      }, props.panel.props));\n    };\n  }, [props.panel, props.onOpen]);\n  return React.createElement(\"div\", {\n    className: Classes.PANEL_STACK2_VIEW\n  }, props.showHeader && React.createElement(\"div\", {\n    className: Classes.PANEL_STACK2_HEADER\n  }, React.createElement(\"span\", null, maybeBackButton), React.createElement(Text, {\n    className: Classes.HEADING,\n    ellipsize: true,\n    title: props.panel.htmlTitle\n  }, props.panel.title), React.createElement(\"span\", null)), React.createElement(PanelWrapper, null));\n};\nPanelView2.displayName = DISPLAYNAME_PREFIX + \".PanelView2\";","map":{"version":3,"sources":["../../../../src/components/panel-stack2/panelView2.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,OAAT,EAAkB,kBAAlB,QAA4C,cAA5C;AACA,SAAS,MAAT,QAAuB,mBAAvB;AACA,SAAS,IAAT,QAAqB,cAArB,C,CAiCA;;AACA,OAAO,IAAM,UAAU,GAAwB,UAA0B,KAA1B,EAAmD;AAC9F,MAAM,WAAW,GAAG,KAAK,CAAC,WAAN,CAAkB,YAAA;AAAM,WAAA,KAAK,CAAC,OAAN,CAAc,KAAK,CAAnB,KAAA,CAAA;AAA0B,GAAlD,EAAoD,CAAC,KAAK,CAAC,OAAP,EAAgB,KAAK,CAAC,KAAtB,CAApD,CAApB;AAEA,MAAM,eAAe,GACjB,KAAK,CAAC,aAAN,KAAwB,SAAxB,GAAoC,IAApC,GACI,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO;AAAA,kBACQ,MADR;AAEH,IAAA,SAAS,EAAE,OAAO,CAAC,uBAFhB;AAGH,IAAA,IAAI,EAAC,cAHF;AAIH,IAAA,OAAO,EAAE,IAJN;AAKH,IAAA,OAAO,EAAE,WALN;AAMH,IAAA,KAAK,EAAE,IANJ;AAOH,IAAA,IAAI,EAAE,KAAK,CAAC,aAAN,CAAoB,KAPvB;AAQH,IAAA,KAAK,EAAE,KAAK,CAAC,aAAN,CAAoB;AARxB,GAAP,CAFR,CAH8F,CAiB9F;AACA;AACA;;AACA,MAAM,YAAY,GAA4B,KAAK,CAAC,OAAN,CAC1C,YAAA;AAAM,WAAA,YAAA;AACF;AACA;AACA;AACA;AACA,aAAA,KAAK,CAAC,KAAN,CAAY,WAAZ,CAAwB,QAAA,CAAA;AACpB,QAAA,UAAU,EAAE,WADQ;AAEpB,QAAA,SAAS,EAAE,KAAK,CAAC;AAFG,OAAA,EAGjB,KAAK,CAAC,KAAN,CAAY,KAHK,CAAxB,CAAA;AALE,KAAA;AASiB,GAVmB,EAW1C,CAAC,KAAK,CAAC,KAAP,EAAc,KAAK,CAAC,MAApB,CAX0C,CAA9C;AAcA,SACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,OAAO,CAAC;AAAxB,GAAA,EACK,KAAK,CAAC,UAAN,IACG,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,OAAO,CAAC;AAAxB,GAAA,EAEI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EAAO,eAAP,CAFJ,EAGI,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,IAAA,SAAS,EAAE,OAAO,CAAC,OAApB;AAA6B,IAAA,SAAS,EAAE,IAAxC;AAA8C,IAAA,KAAK,EAAE,KAAK,CAAC,KAAN,CAAY;AAAjE,GAAL,EACK,KAAK,CAAC,KAAN,CAAY,KADjB,CAHJ,EAMI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,CANJ,CAFR,EAWI,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,CAXJ,CADJ;AAeH,CAjDM;AAkDP,UAAU,CAAC,WAAX,GAA4B,kBAAkB,GAAA,aAA9C","sourceRoot":"","sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign } from \"tslib\";\nimport * as React from \"react\";\nimport { Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport { Button } from \"../button/buttons\";\nimport { Text } from \"../text/text\";\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport var PanelView2 = function (props) {\n    var handleClose = React.useCallback(function () { return props.onClose(props.panel); }, [props.onClose, props.panel]);\n    var maybeBackButton = props.previousPanel === undefined ? null : (React.createElement(Button, { \"aria-label\": \"Back\", className: Classes.PANEL_STACK_HEADER_BACK, icon: \"chevron-left\", minimal: true, onClick: handleClose, small: true, text: props.previousPanel.title, title: props.previousPanel.htmlTitle }));\n    // `props.panel.renderPanel` is simply a function that returns a JSX.Element. It may be an FC which\n    // uses hooks. In order to avoid React errors due to inconsistent hook calls, we must encapsulate\n    // those hooks with their own lifecycle through a very simple wrapper component.\n    var PanelWrapper = React.useMemo(function () { return function () {\n        // N.B. A type cast is required because of error TS2345, where technically `panel.props` could be\n        // instantiated with a type unrelated to our generic constraint `T` here. We know\n        // we're sending the right values here though, and it makes the consumer API for this\n        // component type safe, so it's ok to do this...\n        return props.panel.renderPanel(__assign({ closePanel: handleClose, openPanel: props.onOpen }, props.panel.props));\n    }; }, [props.panel, props.onOpen]);\n    return (React.createElement(\"div\", { className: Classes.PANEL_STACK2_VIEW },\n        props.showHeader && (React.createElement(\"div\", { className: Classes.PANEL_STACK2_HEADER },\n            React.createElement(\"span\", null, maybeBackButton),\n            React.createElement(Text, { className: Classes.HEADING, ellipsize: true, title: props.panel.htmlTitle }, props.panel.title),\n            React.createElement(\"span\", null))),\n        React.createElement(PanelWrapper, null)));\n};\nPanelView2.displayName = DISPLAYNAME_PREFIX + \".PanelView2\";\n//# sourceMappingURL=panelView2.js.map"]},"metadata":{},"sourceType":"module"}