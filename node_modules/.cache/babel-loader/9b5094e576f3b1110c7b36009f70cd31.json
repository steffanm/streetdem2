{"ast":null,"code":"/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes, Utils } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { Button } from \"../button/buttons\";\nimport { Dialog } from \"./dialog\";\nimport { DialogStep } from \"./dialogStep\";\nvar PADDING_BOTTOM = 0;\nvar MIN_WIDTH = 800;\n\nvar MultistepDialog =\n/** @class */\nfunction (_super) {\n  __extends(MultistepDialog, _super);\n\n  function MultistepDialog() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = _this.getInitialIndexFromProps(_this.props);\n\n    _this.renderDialogStep = function (step, index) {\n      var _a;\n\n      var stepNumber = index + 1;\n      var hasBeenViewed = _this.state.lastViewedIndex >= index;\n      var currentlySelected = _this.state.selectedIndex === index;\n      return React.createElement(\"div\", {\n        className: classNames(Classes.DIALOG_STEP_CONTAINER, (_a = {}, _a[Classes.ACTIVE] = currentlySelected, _a[Classes.DIALOG_STEP_VIEWED] = hasBeenViewed, _a)),\n        key: index\n      }, React.createElement(\"div\", {\n        className: Classes.DIALOG_STEP,\n        onClick: _this.handleClickDialogStep(index)\n      }, React.createElement(\"div\", {\n        className: Classes.DIALOG_STEP_ICON\n      }, stepNumber), React.createElement(\"div\", {\n        className: Classes.DIALOG_STEP_TITLE\n      }, step.props.title)));\n    };\n\n    _this.handleClickDialogStep = function (index) {\n      if (index > _this.state.lastViewedIndex) {\n        return;\n      }\n\n      return _this.getDialogStepChangeHandler(index);\n    };\n\n    return _this;\n  }\n\n  MultistepDialog.prototype.render = function () {\n    var _a = this.props,\n        showCloseButtonInFooter = _a.showCloseButtonInFooter,\n        isCloseButtonShown = _a.isCloseButtonShown,\n        otherProps = __rest(_a, [\"showCloseButtonInFooter\", \"isCloseButtonShown\"]); // Only one close button should be displayed. If the footer close button\n    // is shown, we need to ensure the dialog close button is not displayed.\n\n\n    var isCloseButtonVisible = !showCloseButtonInFooter && isCloseButtonShown;\n    return React.createElement(Dialog, __assign({\n      isCloseButtonShown: isCloseButtonVisible\n    }, otherProps, {\n      style: this.getDialogStyle()\n    }), React.createElement(\"div\", {\n      className: Classes.MULTISTEP_DIALOG_PANELS\n    }, this.renderLeftPanel(), this.maybeRenderRightPanel()));\n  };\n\n  MultistepDialog.prototype.componentDidUpdate = function (prevProps) {\n    if ((prevProps.resetOnClose || prevProps.initialStepIndex !== this.props.initialStepIndex) && !prevProps.isOpen && this.props.isOpen) {\n      this.setState(this.getInitialIndexFromProps(this.props));\n    }\n  };\n\n  MultistepDialog.prototype.getDialogStyle = function () {\n    return __assign({\n      minWidth: MIN_WIDTH,\n      paddingBottom: PADDING_BOTTOM\n    }, this.props.style);\n  };\n\n  MultistepDialog.prototype.renderLeftPanel = function () {\n    return React.createElement(\"div\", {\n      className: Classes.MULTISTEP_DIALOG_LEFT_PANEL\n    }, this.getDialogStepChildren().filter(isDialogStepElement).map(this.renderDialogStep));\n  };\n\n  MultistepDialog.prototype.maybeRenderRightPanel = function () {\n    var steps = this.getDialogStepChildren();\n\n    if (steps.length <= this.state.selectedIndex) {\n      return null;\n    }\n\n    var _a = steps[this.state.selectedIndex].props,\n        className = _a.className,\n        panel = _a.panel,\n        panelClassName = _a.panelClassName;\n    return React.createElement(\"div\", {\n      className: classNames(Classes.MULTISTEP_DIALOG_RIGHT_PANEL, className, panelClassName)\n    }, panel, this.renderFooter());\n  };\n\n  MultistepDialog.prototype.renderFooter = function () {\n    var _a = this.props,\n        closeButtonProps = _a.closeButtonProps,\n        isCloseButtonShown = _a.isCloseButtonShown,\n        showCloseButtonInFooter = _a.showCloseButtonInFooter,\n        onClose = _a.onClose;\n    var isFooterCloseButtonVisible = showCloseButtonInFooter && isCloseButtonShown;\n    var maybeCloseButton = !isFooterCloseButtonVisible ? undefined : React.createElement(Button, __assign({\n      text: \"Close\",\n      onClick: onClose\n    }, closeButtonProps));\n    return React.createElement(\"div\", {\n      className: Classes.MULTISTEP_DIALOG_FOOTER\n    }, maybeCloseButton, React.createElement(\"div\", {\n      className: Classes.DIALOG_FOOTER_ACTIONS\n    }, this.renderButtons()));\n  };\n\n  MultistepDialog.prototype.renderButtons = function () {\n    var _a, _b;\n\n    var selectedIndex = this.state.selectedIndex;\n    var steps = this.getDialogStepChildren();\n    var buttons = [];\n\n    if (this.state.selectedIndex > 0) {\n      var backButtonProps = (_a = steps[selectedIndex].props.backButtonProps) !== null && _a !== void 0 ? _a : this.props.backButtonProps;\n      buttons.push(React.createElement(Button, __assign({\n        key: \"back\",\n        onClick: this.getDialogStepChangeHandler(selectedIndex - 1),\n        text: \"Back\"\n      }, backButtonProps)));\n    }\n\n    if (selectedIndex === this.getDialogStepChildren().length - 1) {\n      buttons.push(React.createElement(Button, __assign({\n        intent: \"primary\",\n        key: \"final\",\n        text: \"Submit\"\n      }, this.props.finalButtonProps)));\n    } else {\n      var nextButtonProps = (_b = steps[selectedIndex].props.nextButtonProps) !== null && _b !== void 0 ? _b : this.props.nextButtonProps;\n      buttons.push(React.createElement(Button, __assign({\n        intent: \"primary\",\n        key: \"next\",\n        onClick: this.getDialogStepChangeHandler(selectedIndex + 1),\n        text: \"Next\"\n      }, nextButtonProps)));\n    }\n\n    return buttons;\n  };\n\n  MultistepDialog.prototype.getDialogStepChangeHandler = function (index) {\n    var _this = this;\n\n    return function (event) {\n      if (_this.props.onChange !== undefined) {\n        var steps = _this.getDialogStepChildren();\n\n        var prevStepId = steps[_this.state.selectedIndex].props.id;\n        var newStepId = steps[index].props.id;\n\n        _this.props.onChange(newStepId, prevStepId, event);\n      }\n\n      _this.setState({\n        lastViewedIndex: Math.max(_this.state.lastViewedIndex, index),\n        selectedIndex: index\n      });\n    };\n  };\n  /** Filters children to only `<DialogStep>`s */\n\n\n  MultistepDialog.prototype.getDialogStepChildren = function (props) {\n    if (props === void 0) {\n      props = this.props;\n    }\n\n    return React.Children.toArray(props.children).filter(isDialogStepElement);\n  };\n\n  MultistepDialog.prototype.getInitialIndexFromProps = function (props) {\n    if (props.initialStepIndex !== undefined) {\n      var boundedInitialIndex = Math.max(0, Math.min(props.initialStepIndex, this.getDialogStepChildren(props).length - 1));\n      return {\n        lastViewedIndex: boundedInitialIndex,\n        selectedIndex: boundedInitialIndex\n      };\n    } else {\n      return {\n        lastViewedIndex: 0,\n        selectedIndex: 0\n      };\n    }\n  };\n\n  MultistepDialog.displayName = DISPLAYNAME_PREFIX + \".MultistepDialog\";\n  MultistepDialog.defaultProps = {\n    canOutsideClickClose: true,\n    isOpen: false,\n    resetOnClose: true,\n    showCloseButtonInFooter: false\n  };\n  MultistepDialog = __decorate([polyfill], MultistepDialog);\n  return MultistepDialog;\n}(AbstractPureComponent2);\n\nexport { MultistepDialog };\n\nfunction isDialogStepElement(child) {\n  return Utils.isElementOfType(child, DialogStep);\n}","map":{"version":3,"sources":["../../../../src/components/dialog/multistepDialog.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes, Utils } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { Button } from \"../button/buttons\";\nimport { Dialog } from \"./dialog\";\nimport { DialogStep } from \"./dialogStep\";\nvar PADDING_BOTTOM = 0;\nvar MIN_WIDTH = 800;\nvar MultistepDialog = /** @class */ (function (_super) {\n    __extends(MultistepDialog, _super);\n    function MultistepDialog() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = _this.getInitialIndexFromProps(_this.props);\n        _this.renderDialogStep = function (step, index) {\n            var _a;\n            var stepNumber = index + 1;\n            var hasBeenViewed = _this.state.lastViewedIndex >= index;\n            var currentlySelected = _this.state.selectedIndex === index;\n            return (React.createElement(\"div\", { className: classNames(Classes.DIALOG_STEP_CONTAINER, (_a = {},\n                    _a[Classes.ACTIVE] = currentlySelected,\n                    _a[Classes.DIALOG_STEP_VIEWED] = hasBeenViewed,\n                    _a)), key: index },\n                React.createElement(\"div\", { className: Classes.DIALOG_STEP, onClick: _this.handleClickDialogStep(index) },\n                    React.createElement(\"div\", { className: Classes.DIALOG_STEP_ICON }, stepNumber),\n                    React.createElement(\"div\", { className: Classes.DIALOG_STEP_TITLE }, step.props.title))));\n        };\n        _this.handleClickDialogStep = function (index) {\n            if (index > _this.state.lastViewedIndex) {\n                return;\n            }\n            return _this.getDialogStepChangeHandler(index);\n        };\n        return _this;\n    }\n    MultistepDialog.prototype.render = function () {\n        var _a = this.props, showCloseButtonInFooter = _a.showCloseButtonInFooter, isCloseButtonShown = _a.isCloseButtonShown, otherProps = __rest(_a, [\"showCloseButtonInFooter\", \"isCloseButtonShown\"]);\n        // Only one close button should be displayed. If the footer close button\n        // is shown, we need to ensure the dialog close button is not displayed.\n        var isCloseButtonVisible = !showCloseButtonInFooter && isCloseButtonShown;\n        return (React.createElement(Dialog, __assign({ isCloseButtonShown: isCloseButtonVisible }, otherProps, { style: this.getDialogStyle() }),\n            React.createElement(\"div\", { className: Classes.MULTISTEP_DIALOG_PANELS },\n                this.renderLeftPanel(),\n                this.maybeRenderRightPanel())));\n    };\n    MultistepDialog.prototype.componentDidUpdate = function (prevProps) {\n        if ((prevProps.resetOnClose || prevProps.initialStepIndex !== this.props.initialStepIndex) &&\n            !prevProps.isOpen &&\n            this.props.isOpen) {\n            this.setState(this.getInitialIndexFromProps(this.props));\n        }\n    };\n    MultistepDialog.prototype.getDialogStyle = function () {\n        return __assign({ minWidth: MIN_WIDTH, paddingBottom: PADDING_BOTTOM }, this.props.style);\n    };\n    MultistepDialog.prototype.renderLeftPanel = function () {\n        return (React.createElement(\"div\", { className: Classes.MULTISTEP_DIALOG_LEFT_PANEL }, this.getDialogStepChildren().filter(isDialogStepElement).map(this.renderDialogStep)));\n    };\n    MultistepDialog.prototype.maybeRenderRightPanel = function () {\n        var steps = this.getDialogStepChildren();\n        if (steps.length <= this.state.selectedIndex) {\n            return null;\n        }\n        var _a = steps[this.state.selectedIndex].props, className = _a.className, panel = _a.panel, panelClassName = _a.panelClassName;\n        return (React.createElement(\"div\", { className: classNames(Classes.MULTISTEP_DIALOG_RIGHT_PANEL, className, panelClassName) },\n            panel,\n            this.renderFooter()));\n    };\n    MultistepDialog.prototype.renderFooter = function () {\n        var _a = this.props, closeButtonProps = _a.closeButtonProps, isCloseButtonShown = _a.isCloseButtonShown, showCloseButtonInFooter = _a.showCloseButtonInFooter, onClose = _a.onClose;\n        var isFooterCloseButtonVisible = showCloseButtonInFooter && isCloseButtonShown;\n        var maybeCloseButton = !isFooterCloseButtonVisible ? undefined : (React.createElement(Button, __assign({ text: \"Close\", onClick: onClose }, closeButtonProps)));\n        return (React.createElement(\"div\", { className: Classes.MULTISTEP_DIALOG_FOOTER },\n            maybeCloseButton,\n            React.createElement(\"div\", { className: Classes.DIALOG_FOOTER_ACTIONS }, this.renderButtons())));\n    };\n    MultistepDialog.prototype.renderButtons = function () {\n        var _a, _b;\n        var selectedIndex = this.state.selectedIndex;\n        var steps = this.getDialogStepChildren();\n        var buttons = [];\n        if (this.state.selectedIndex > 0) {\n            var backButtonProps = (_a = steps[selectedIndex].props.backButtonProps) !== null && _a !== void 0 ? _a : this.props.backButtonProps;\n            buttons.push(React.createElement(Button, __assign({ key: \"back\", onClick: this.getDialogStepChangeHandler(selectedIndex - 1), text: \"Back\" }, backButtonProps)));\n        }\n        if (selectedIndex === this.getDialogStepChildren().length - 1) {\n            buttons.push(React.createElement(Button, __assign({ intent: \"primary\", key: \"final\", text: \"Submit\" }, this.props.finalButtonProps)));\n        }\n        else {\n            var nextButtonProps = (_b = steps[selectedIndex].props.nextButtonProps) !== null && _b !== void 0 ? _b : this.props.nextButtonProps;\n            buttons.push(React.createElement(Button, __assign({ intent: \"primary\", key: \"next\", onClick: this.getDialogStepChangeHandler(selectedIndex + 1), text: \"Next\" }, nextButtonProps)));\n        }\n        return buttons;\n    };\n    MultistepDialog.prototype.getDialogStepChangeHandler = function (index) {\n        var _this = this;\n        return function (event) {\n            if (_this.props.onChange !== undefined) {\n                var steps = _this.getDialogStepChildren();\n                var prevStepId = steps[_this.state.selectedIndex].props.id;\n                var newStepId = steps[index].props.id;\n                _this.props.onChange(newStepId, prevStepId, event);\n            }\n            _this.setState({\n                lastViewedIndex: Math.max(_this.state.lastViewedIndex, index),\n                selectedIndex: index,\n            });\n        };\n    };\n    /** Filters children to only `<DialogStep>`s */\n    MultistepDialog.prototype.getDialogStepChildren = function (props) {\n        if (props === void 0) { props = this.props; }\n        return React.Children.toArray(props.children).filter(isDialogStepElement);\n    };\n    MultistepDialog.prototype.getInitialIndexFromProps = function (props) {\n        if (props.initialStepIndex !== undefined) {\n            var boundedInitialIndex = Math.max(0, Math.min(props.initialStepIndex, this.getDialogStepChildren(props).length - 1));\n            return {\n                lastViewedIndex: boundedInitialIndex,\n                selectedIndex: boundedInitialIndex,\n            };\n        }\n        else {\n            return {\n                lastViewedIndex: 0,\n                selectedIndex: 0,\n            };\n        }\n    };\n    MultistepDialog.displayName = DISPLAYNAME_PREFIX + \".MultistepDialog\";\n    MultistepDialog.defaultProps = {\n        canOutsideClickClose: true,\n        isOpen: false,\n        resetOnClose: true,\n        showCloseButtonInFooter: false,\n    };\n    MultistepDialog = __decorate([\n        polyfill\n    ], MultistepDialog);\n    return MultistepDialog;\n}(AbstractPureComponent2));\nexport { MultistepDialog };\nfunction isDialogStepElement(child) {\n    return Utils.isElementOfType(child, DialogStep);\n}\n//# sourceMappingURL=multistepDialog.js.map"]},"metadata":{},"sourceType":"module"}