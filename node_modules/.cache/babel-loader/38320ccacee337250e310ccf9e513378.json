{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { ADD_PARTICIPANT_FORM_SUBMITTING, LOAD_PARTICIPANT_SEARCH_RESULTS, SEARCH_PARTICIPANT_NAME_ACTION, ADD_SERVICES_FORM_SUBMITTING, PARTICIPANT_DETAILS_ID_ACTION, LOAD_USER, LOAD_SERVICES_SEARCH_RESULTS, LOAD_PARTICIPANT, LOAD_SERVICE_LETTERS } from \"../actionTypes\";\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case LOAD_SERVICE_LETTERS:\n      {\n        return { ...state,\n          serviceLetters: payload\n        };\n      }\n\n    case LOAD_PARTICIPANT:\n      {\n        return { ...state,\n          focusedParticipant: payload\n        };\n      }\n\n    case LOAD_USER:\n      return { ...state,\n        currentlyAuthenticatedUser: payload\n      };\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nconst searchParticipantReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case LOAD_PARTICIPANT_SEARCH_RESULTS:\n      return { ...state,\n        participantSearchResults: payload\n      };\n\n    case ADD_PARTICIPANT_FORM_SUBMITTING:\n      return { ...state,\n        participantSearchResults: state.participantSearchResults.concat(payload)\n      };\n\n    case SEARCH_PARTICIPANT_NAME_ACTION:\n      return { ...state,\n        filteredSearchResults: state.participantSearchResults.filter(searchResults => searchResults.completeName.toLowerCase().includes(payload.toLowerCase()))\n      };\n\n    case PARTICIPANT_DETAILS_ID_ACTION:\n      return { ...state,\n        filteredSearchResults: state.participantSearchResults.filter(searchResults => searchResults._id(payload))\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst searchServicesReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case LOAD_SERVICES_SEARCH_RESULTS:\n      return { ...state,\n        servicesSearchResults: payload\n      };\n\n    case ADD_SERVICES_FORM_SUBMITTING:\n      return { ...state,\n        servicesSearchResults: state.servicesSearchResults.concat(payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  searchState: searchParticipantReducer,\n  servicesSearchState: searchServicesReducer,\n  userState: userReducer\n});","map":{"version":3,"sources":["/home/morris/new_street_dem/streetdem2/src/redux/reducers/index.js"],"names":["combineReducers","ADD_PARTICIPANT_FORM_SUBMITTING","LOAD_PARTICIPANT_SEARCH_RESULTS","SEARCH_PARTICIPANT_NAME_ACTION","ADD_SERVICES_FORM_SUBMITTING","PARTICIPANT_DETAILS_ID_ACTION","LOAD_USER","LOAD_SERVICES_SEARCH_RESULTS","LOAD_PARTICIPANT","LOAD_SERVICE_LETTERS","userReducer","state","action","type","payload","serviceLetters","focusedParticipant","currentlyAuthenticatedUser","searchParticipantReducer","participantSearchResults","concat","filteredSearchResults","filter","searchResults","completeName","toLowerCase","includes","_id","searchServicesReducer","servicesSearchResults","searchState","servicesSearchState","userState"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SACEC,+BADF,EAEEC,+BAFF,EAGEC,8BAHF,EAIEC,4BAJF,EAKEC,6BALF,EAMEC,SANF,EAOEC,4BAPF,EAQEC,gBARF,EASEC,oBATF,QAUO,gBAVP;;AAYA,MAAMC,WAAW,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AAC1C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKJ,oBAAL;AAA2B;AACzB,eAAO,EACL,GAAGE,KADE;AAELI,UAAAA,cAAc,EAAED;AAFX,SAAP;AAID;;AACD,SAAKN,gBAAL;AAAuB;AACrB,eAAO,EACL,GAAGG,KADE;AAELK,UAAAA,kBAAkB,EAAEF;AAFf,SAAP;AAID;;AACD,SAAKR,SAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELM,QAAAA,0BAA0B,EAAEH;AAFvB,OAAP;;AAKF;AACE;AApBJ;;AAsBA,SAAOH,KAAP;AACD,CA1BD;;AA4BA,MAAMO,wBAAwB,GAAG,YAAwB;AAAA,MAAvBP,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AACvD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKX,+BAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELQ,QAAAA,wBAAwB,EAAEL;AAFrB,OAAP;;AAIF,SAAKb,+BAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELQ,QAAAA,wBAAwB,EACtBR,KAAK,CAACQ,wBAAN,CAA+BC,MAA/B,CAAsCN,OAAtC;AAHG,OAAP;;AAKF,SAAKX,8BAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELU,QAAAA,qBAAqB,EAAEV,KAAK,CAACQ,wBAAN,CAA+BG,MAA/B,CACpBC,aAAD,IACEA,aAAa,CAACC,YAAd,CACGC,WADH,GAEGC,QAFH,CAEYZ,OAAO,CAACW,WAAR,EAFZ,CAFmB;AAFlB,OAAP;;AASF,SAAKpB,6BAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELU,QAAAA,qBAAqB,EAAEV,KAAK,CAACQ,wBAAN,CAA+BG,MAA/B,CACpBC,aAAD,IAAmBA,aAAa,CAACI,GAAd,CAAkBb,OAAlB,CADE;AAFlB,OAAP;;AAMF;AACE,aAAOH,KAAP;AA9BJ;AAgCD,CAlCD;;AAoCA,MAAMiB,qBAAqB,GAAG,YAAwB;AAAA,MAAvBjB,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKN,4BAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELkB,QAAAA,qBAAqB,EAAEf;AAFlB,OAAP;;AAIF,SAAKV,4BAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELkB,QAAAA,qBAAqB,EAAElB,KAAK,CAACkB,qBAAN,CAA4BT,MAA5B,CAAmCN,OAAnC;AAFlB,OAAP;;AAIF;AACE,aAAOH,KAAP;AAZJ;AAcD,CAhBD;;AAkBA,eAAeX,eAAe,CAAC;AAC7B8B,EAAAA,WAAW,EAAEZ,wBADgB;AAE7Ba,EAAAA,mBAAmB,EAAEH,qBAFQ;AAG7BI,EAAAA,SAAS,EAAEtB;AAHkB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\nimport {\n  ADD_PARTICIPANT_FORM_SUBMITTING,\n  LOAD_PARTICIPANT_SEARCH_RESULTS,\n  SEARCH_PARTICIPANT_NAME_ACTION,\n  ADD_SERVICES_FORM_SUBMITTING,\n  PARTICIPANT_DETAILS_ID_ACTION,\n  LOAD_USER,\n  LOAD_SERVICES_SEARCH_RESULTS,\n  LOAD_PARTICIPANT,\n  LOAD_SERVICE_LETTERS,\n} from \"../actionTypes\";\n\nconst userReducer = (state = {}, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case LOAD_SERVICE_LETTERS: {\n      return {\n        ...state,\n        serviceLetters: payload,\n      };\n    }\n    case LOAD_PARTICIPANT: {\n      return {\n        ...state,\n        focusedParticipant: payload,\n      };\n    }\n    case LOAD_USER:\n      return {\n        ...state,\n        currentlyAuthenticatedUser: payload,\n      };\n\n    default:\n      break;\n  }\n  return state;\n};\n\nconst searchParticipantReducer = (state = {}, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case LOAD_PARTICIPANT_SEARCH_RESULTS:\n      return {\n        ...state,\n        participantSearchResults: payload,\n      };\n    case ADD_PARTICIPANT_FORM_SUBMITTING:\n      return {\n        ...state,\n        participantSearchResults:\n          state.participantSearchResults.concat(payload),\n      };\n    case SEARCH_PARTICIPANT_NAME_ACTION:\n      return {\n        ...state,\n        filteredSearchResults: state.participantSearchResults.filter(\n          (searchResults) =>\n            searchResults.completeName\n              .toLowerCase()\n              .includes(payload.toLowerCase())\n        ),\n      };\n    case PARTICIPANT_DETAILS_ID_ACTION:\n      return {\n        ...state,\n        filteredSearchResults: state.participantSearchResults.filter(\n          (searchResults) => searchResults._id(payload)\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nconst searchServicesReducer = (state = {}, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case LOAD_SERVICES_SEARCH_RESULTS:\n      return {\n        ...state,\n        servicesSearchResults: payload,\n      };\n    case ADD_SERVICES_FORM_SUBMITTING:\n      return {\n        ...state,\n        servicesSearchResults: state.servicesSearchResults.concat(payload),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  searchState: searchParticipantReducer,\n  servicesSearchState: searchServicesReducer,\n  userState: userReducer,\n});\n"]},"metadata":{},"sourceType":"module"}