{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __decorate, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport { Icon } from \"../icon/icon\";\nimport { normalizeKeyCombo } from \"./hotkeyParser\";\nvar KeyIcons = {\n  alt: {\n    icon: \"key-option\",\n    iconTitle: \"Alt/Option key\"\n  },\n  cmd: {\n    icon: \"key-command\",\n    iconTitle: \"Command key\"\n  },\n  ctrl: {\n    icon: \"key-control\",\n    iconTitle: \"Control key\"\n  },\n  delete: {\n    icon: \"key-delete\",\n    iconTitle: \"Delete key\"\n  },\n  down: {\n    icon: \"arrow-down\",\n    iconTitle: \"Down key\"\n  },\n  enter: {\n    icon: \"key-enter\",\n    iconTitle: \"Enter key\"\n  },\n  left: {\n    icon: \"arrow-left\",\n    iconTitle: \"Left key\"\n  },\n  meta: {\n    icon: \"key-command\",\n    iconTitle: \"Command key\"\n  },\n  right: {\n    icon: \"arrow-right\",\n    iconTitle: \"Right key\"\n  },\n  shift: {\n    icon: \"key-shift\",\n    iconTitle: \"Shift key\"\n  },\n  up: {\n    icon: \"arrow-up\",\n    iconTitle: \"Up key\"\n  }\n};\n\nvar KeyCombo =\n/** @class */\nfunction (_super) {\n  __extends(KeyCombo, _super);\n\n  function KeyCombo() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.renderKey = function (key, index) {\n      var _a;\n\n      var icon = KeyIcons[key];\n      var reactKey = \"key-\" + index;\n      return React.createElement(\"kbd\", {\n        className: classNames(Classes.KEY, (_a = {}, _a[Classes.MODIFIER_KEY] = icon != null, _a)),\n        key: reactKey\n      }, icon != null && React.createElement(Icon, {\n        icon: icon.icon,\n        title: icon.iconTitle\n      }), key);\n    };\n\n    _this.renderMinimalKey = function (key, index) {\n      var icon = KeyIcons[key];\n      return icon == null ? key : React.createElement(Icon, {\n        icon: icon.icon,\n        title: icon.iconTitle,\n        key: \"key-\" + index\n      });\n    };\n\n    return _this;\n  }\n\n  KeyCombo.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        combo = _a.combo,\n        minimal = _a.minimal;\n    var keys = normalizeKeyCombo(combo).map(function (key) {\n      return key.length === 1 ? key.toUpperCase() : key;\n    }).map(minimal ? this.renderMinimalKey : this.renderKey);\n    return React.createElement(\"span\", {\n      className: classNames(Classes.KEY_COMBO, className)\n    }, keys);\n  };\n\n  KeyCombo.displayName = DISPLAYNAME_PREFIX + \".KeyCombo\";\n  KeyCombo = __decorate([polyfill], KeyCombo);\n  return KeyCombo;\n}(AbstractPureComponent2);\n\nexport { KeyCombo };","map":{"version":3,"sources":["../../../../src/components/hotkeys/keyCombo.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,QAAT,QAAyB,yBAAzB;AAEA,SAAS,sBAAT,EAAiC,OAAjC,EAA0C,kBAA1C,QAA2E,cAA3E;AACA,SAAS,IAAT,QAA+B,cAA/B;AACA,SAAS,iBAAT,QAAkC,gBAAlC;AAEA,IAAM,QAAQ,GAA6D;AACvE,EAAA,GAAG,EAAE;AAAE,IAAA,IAAI,EAAE,YAAR;AAAsB,IAAA,SAAS,EAAE;AAAjC,GADkE;AAEvE,EAAA,GAAG,EAAE;AAAE,IAAA,IAAI,EAAE,aAAR;AAAuB,IAAA,SAAS,EAAE;AAAlC,GAFkE;AAGvE,EAAA,IAAI,EAAE;AAAE,IAAA,IAAI,EAAE,aAAR;AAAuB,IAAA,SAAS,EAAE;AAAlC,GAHiE;AAIvE,EAAA,MAAM,EAAE;AAAE,IAAA,IAAI,EAAE,YAAR;AAAsB,IAAA,SAAS,EAAE;AAAjC,GAJ+D;AAKvE,EAAA,IAAI,EAAE;AAAE,IAAA,IAAI,EAAE,YAAR;AAAsB,IAAA,SAAS,EAAE;AAAjC,GALiE;AAMvE,EAAA,KAAK,EAAE;AAAE,IAAA,IAAI,EAAE,WAAR;AAAqB,IAAA,SAAS,EAAE;AAAhC,GANgE;AAOvE,EAAA,IAAI,EAAE;AAAE,IAAA,IAAI,EAAE,YAAR;AAAsB,IAAA,SAAS,EAAE;AAAjC,GAPiE;AAQvE,EAAA,IAAI,EAAE;AAAE,IAAA,IAAI,EAAE,aAAR;AAAuB,IAAA,SAAS,EAAE;AAAlC,GARiE;AASvE,EAAA,KAAK,EAAE;AAAE,IAAA,IAAI,EAAE,aAAR;AAAuB,IAAA,SAAS,EAAE;AAAlC,GATgE;AAUvE,EAAA,KAAK,EAAE;AAAE,IAAA,IAAI,EAAE,WAAR;AAAqB,IAAA,SAAS,EAAE;AAAhC,GAVgE;AAWvE,EAAA,EAAE,EAAE;AAAE,IAAA,IAAI,EAAE,UAAR;AAAoB,IAAA,SAAS,EAAE;AAA/B;AAXmE,CAA3E;;AAgCA,IAAA,QAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA8B,EAAA,SAAA,CAAA,QAAA,EAAA,MAAA,CAAA;;AAA9B,WAAA,QAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAWY,IAAA,KAAA,CAAA,SAAA,GAAY,UAAC,GAAD,EAAc,KAAd,EAA2B;;;AAC3C,UAAM,IAAI,GAAG,QAAQ,CAAC,GAAD,CAArB;AACA,UAAM,QAAQ,GAAG,SAAO,KAAxB;AACA,aACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAE,UAAU,CAAC,OAAO,CAAC,GAAT,GAAY,EAAA,GAAA,EAAA,EAAI,EAAA,CAAC,OAAO,CAAC,YAAT,CAAA,GAAwB,IAAI,IAAI,IAApC,EAAwC,EAApD,EAA1B;AAAmF,QAAA,GAAG,EAAE;AAAxF,OAAA,EACK,IAAI,IAAI,IAAR,IAAgB,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,QAAA,IAAI,EAAE,IAAI,CAAC,IAAZ;AAAkB,QAAA,KAAK,EAAE,IAAI,CAAC;AAA9B,OAAL,CADrB,EAEK,GAFL,CADJ;AAMH,KATO;;AAWA,IAAA,KAAA,CAAA,gBAAA,GAAmB,UAAC,GAAD,EAAc,KAAd,EAA2B;AAClD,UAAM,IAAI,GAAG,QAAQ,CAAC,GAAD,CAArB;AACA,aAAO,IAAI,IAAI,IAAR,GAAe,GAAf,GAAqB,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,QAAA,IAAI,EAAE,IAAI,CAAC,IAAZ;AAAkB,QAAA,KAAK,EAAE,IAAI,CAAC,SAA9B;AAAyC,QAAA,GAAG,EAAE,SAAO;AAArD,OAAL,CAA5B;AACH,KAHO;;;AAIX;;AAvBU,EAAA,QAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACU,QAAA,EAAA,GAAgC,KAAK,KAArC;AAAA,QAAE,SAAS,GAAA,EAAA,CAAA,SAAX;AAAA,QAAa,KAAK,GAAA,EAAA,CAAA,KAAlB;AAAA,QAAoB,OAAO,GAAA,EAAA,CAAA,OAA3B;AACN,QAAM,IAAI,GAAG,iBAAiB,CAAC,KAAD,CAAjB,CACR,GADQ,CACJ,UAAA,GAAA,EAAG;AAAI,aAAC,GAAG,CAAC,MAAJ,KAAe,CAAf,GAAmB,GAAG,CAAC,WAAJ,EAAnB,GAAD,GAAA;AAA4C,KAD/C,EAER,GAFQ,CAEJ,OAAO,GAAG,KAAK,gBAAR,GAA2B,KAAK,SAFnC,CAAb;AAGA,WAAO,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,SAAS,EAAE,UAAU,CAAC,OAAO,CAAC,SAAT,EAAoB,SAApB;AAA3B,KAAA,EAA4D,IAA5D,CAAP;AACH,GANM;;AAFO,EAAA,QAAA,CAAA,WAAA,GAAiB,kBAAkB,GAAA,WAAnC;AADL,EAAA,QAAQ,GAAA,UAAA,CAAA,CADpB,QACoB,CAAA,EAAR,QAAQ,CAAR;AA0Bb,SAAA,QAAA;AAAC,CA1BD,CAA8B,sBAA9B,CAAA;;SAAa,Q","sourceRoot":"","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __decorate, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport { Icon } from \"../icon/icon\";\nimport { normalizeKeyCombo } from \"./hotkeyParser\";\nvar KeyIcons = {\n    alt: { icon: \"key-option\", iconTitle: \"Alt/Option key\" },\n    cmd: { icon: \"key-command\", iconTitle: \"Command key\" },\n    ctrl: { icon: \"key-control\", iconTitle: \"Control key\" },\n    delete: { icon: \"key-delete\", iconTitle: \"Delete key\" },\n    down: { icon: \"arrow-down\", iconTitle: \"Down key\" },\n    enter: { icon: \"key-enter\", iconTitle: \"Enter key\" },\n    left: { icon: \"arrow-left\", iconTitle: \"Left key\" },\n    meta: { icon: \"key-command\", iconTitle: \"Command key\" },\n    right: { icon: \"arrow-right\", iconTitle: \"Right key\" },\n    shift: { icon: \"key-shift\", iconTitle: \"Shift key\" },\n    up: { icon: \"arrow-up\", iconTitle: \"Up key\" },\n};\nvar KeyCombo = /** @class */ (function (_super) {\n    __extends(KeyCombo, _super);\n    function KeyCombo() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.renderKey = function (key, index) {\n            var _a;\n            var icon = KeyIcons[key];\n            var reactKey = \"key-\" + index;\n            return (React.createElement(\"kbd\", { className: classNames(Classes.KEY, (_a = {}, _a[Classes.MODIFIER_KEY] = icon != null, _a)), key: reactKey },\n                icon != null && React.createElement(Icon, { icon: icon.icon, title: icon.iconTitle }),\n                key));\n        };\n        _this.renderMinimalKey = function (key, index) {\n            var icon = KeyIcons[key];\n            return icon == null ? key : React.createElement(Icon, { icon: icon.icon, title: icon.iconTitle, key: \"key-\" + index });\n        };\n        return _this;\n    }\n    KeyCombo.prototype.render = function () {\n        var _a = this.props, className = _a.className, combo = _a.combo, minimal = _a.minimal;\n        var keys = normalizeKeyCombo(combo)\n            .map(function (key) { return (key.length === 1 ? key.toUpperCase() : key); })\n            .map(minimal ? this.renderMinimalKey : this.renderKey);\n        return React.createElement(\"span\", { className: classNames(Classes.KEY_COMBO, className) }, keys);\n    };\n    KeyCombo.displayName = DISPLAYNAME_PREFIX + \".KeyCombo\";\n    KeyCombo = __decorate([\n        polyfill\n    ], KeyCombo);\n    return KeyCombo;\n}(AbstractPureComponent2));\nexport { KeyCombo };\n//# sourceMappingURL=keyCombo.js.map"]},"metadata":{},"sourceType":"module"}